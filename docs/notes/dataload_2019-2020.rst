
.. highlight:: rest

BISON data load Oct 2019
=======================
.. contents::  

.. _GBIF Data Processing: docs/notes/gbif_process.rst
.. _BISON Data Provider Dataset Processing: docs/notes/provider_dataset_process.rst

Overview Process
-----------------

GBIF Data Load
~~~~~~~~~~~~~~
#. Process a portion (~10 million records) of a GBIF data download for a "smoke test" 
   and provide to Denver for data load into BISON staging. 
   For GBIF-specific data processing see `GBIF Data Processing`_
#. After confirmation that the smoke-test data loads into the BISON staging 
   system correctly, re-download GBIF US and Canada/US Territories datasets, and 
   process.  Provide processed data to Denver for ingest.
   
BISON Data Provider Data Load
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#. Process/sort the current-BISON-provider-records provided by Denver from the BISON 
   production system, to be used as input for BISON provider dataset processing.
#. Copy current-BISON-provider-records into a new file for editing: 
   updated-BISON-provider-records
#. Download all available, new, individual BISON provider datasets from Jira tickets.
#. Merge individual BISON provider datasets into updated-BISON-provider-records 
   into a new updated-BISON-provider-records

   * For datasets that do not exist in the current-BISON-provider-records, add 
     all records to the new updated-BISON-provider-records
   * For datasets that do exist in current-BISON-provider-records, replace - 
     **remove** all records for that dataset from updated-BISON-provider-records, and 
     and **add** all records from the individual BISON provider 

#. Process the merged updated-BISON-provider-records, (also step 3 of GBIF processing)

   * fill ITIS fields: itis_tsn, valid_accepted_scientific_name, valid_accepted_tsn, itis_common_names, and if blank, kingdom
   * fill establishment means using itis_tsn or clean_provided_scientific_name
   * georeference

     * if no lat/lon, calculate lat/lon from centroids of provided state/county/fips
     * calculate enclosing terrestrial (state, county, fips) or marine (eez, mrgid) polygons

#. Provide the updated-BISON-provider-records to Derek for ingest

  
  
GBIF and BISON provider common processing
-------------------------------------------
To be done on BISON 48, either from GBIF or data providers,
process info at: https://my.usgs.gov/confluence/display/DEV/SAS+Development

* ITIS lookup 
  
  * Prep: get updated lookup table created by ITIS developers provided by Denver

      * Rejected options:
    
        * Use API?  No, Solr query is fast, but REST query for common names is slow
        * Use downloaded database from https://www.itis.gov/downloads/index.html
          No, data is not as current as version provided by ITIS developers

  * Lookup TSN from clean_provided_scientific_name to fill fields:

    * itis_common_name
    * itis_tsn
    * valid_accepted_scientific_name
    * valid_accepted_tsn
    * kingdom if provided field is blank
  
* Geo lookup

  * Prep: compute centroids for all polygons in US Counties shapefile, add to 
    polygon attributes, create a LUT for faster lookup.

  * On records with longitude/latitude
   
    * Do point-in-polygon query on shapefiles to fill 
      calculated_state_name, calculated_county_name, calculated_fips from 
      US Counties.zip for US and Canada: https://my.usgs.gov/jira/browse/BISA-1143
    * Do point-in-polygon query on shapefiles to fill 
      calculated_waterbody, mrgid from 
      World_EEZ_v8_20140228_splitpolygons.zip, using attributes MRGID & EEZEEZ: 
      https://my.usgs.gov/jira/browse/BISA-763 
      Shayne says: "I think we will always need to check EEZ as there is some 
      overlap with the other layers"
    * If point intersects with > 1 terrestrial or marine polygon, leave blank
    * If point intersects with terrestrial AND marine polygons, leave blank      
      
  * On records with NO longitude/latitude, use geography lookup table for 
    
    * if provided_state_name + provided_county_name, fill longitude/latitude 
      with county centroid coordinates, fill centroid with "county"
    * if provided_fips, fill longitude/latitude 
      with fips centroid coordinates, fill centroid with "county"

           
BISON 48 (fields with raw or calculated values)
-----------------------------------------------
For GBIF data load, field values will be pulled from named GBIF field or 
calculated according to rules laid out in `GBIF Data Processing`_.

For BISON provider data processing, the data should already be correctly 
populated, we will test it for contents, format, etc.

#. clean_provided_scientific_name

   * Calc: 1) gbif name parser and scientificName OR 
     2) gbif species api and taxonKey
           
#. itis_common_name

   * Calc: from ITIS lookup (of itis_tsn calc)
   
#. itis_tsn 

   * Calc: with ITIS lookup + clean_provided_scientific_name

#. basis_of_record

   * gbif/dwc basisOfRecord + controlled vocabulary 

#. occurrence_date

   * gbif/dwc eventDate - formatted to YYYY-MM-DD if full date, or YYYY

#. year 

   * gbif/dwc year or pulled from occurrence_date calc

#. verbatim_event_date

   * gbif/dwc verbatimEventDate

#. provider

   * gbif/dwc institutionCode (2018: title from gbif organization metadata?)

#. provider_url

   * gbif/dwc institutionID (2018: homepage from gbif organization metadata?)

#. resource

   * Calc: dataset api + datasetKey, retrieve title (dataset name)

#. resource_url (https://bison.usgs.gov/ipt/resource?r= or other link) (DwC: collectionID)

   * Calc: gbif dataset api + datasetKey, retrieve homepage (dataset url)
   
#. occurrence_url

   * gbif/dwc occurrenceID
   
#. catalog_number

   * gbif/dwc catalogNumber
   
#. collector

   * gbif/dwc recordedBy
   
#. collector_number

   * gbif/dwc recordNumber
   
#. valid_accepted_scientific_name

   * Calc from ITIS lookup

#. valid_accepted_tsn

   * Calc from ITIS lookup

#. provided_scientific_name

   * original gbif/dwc scientificName (AMS: later, check verbatim file)

#. provided_tsn

   * gbif/dwc taxonID

#. latitude

   * first pass: gbif/dwc decimalLatitude if exist and valid
   * second pass if missing: Calc: Geo lookup from centroids of smallest 
     enclosing polygon in provided shapefiles

#. longitude (DwC: decimalLongitude)

   * first pass: gbif/dwc decimalLongitude if exist and valid
   * second pass if missing: Calc: Geo lookup from centroids of smallest 
     enclosing polygon in provided shapefiles
   
#. verbatim_elevation

   * gbif/dwc verbatimElevation
   
#. verbatim_depth

   * gbif/dwc verbatimDepth
   
#. calculated_county_name

   * Calc: Point-in-polygon terrestrial - coordinates + county polygons
   
#. calculated_fips

   * Calc: Point-in-polygon terrestrial - coordinates + fips polygons
   
#. calculated_state_name

   * Calc: Point-in-polygon terrestrial - coordinates + state polygons
   
#. centroid

   * Calc: populate if coordinates calculated from Geo lookup to polygon
   * Do not overwrite existing values in BISON-provided datasets
   
#. provided_county_name

   * gbif/dwc county
   
#. provided_fips

   * gbif/dwc higherGeographyID
   
#. provided_state_name

   * gbif/dwc stateProvince
   
#. thumb_url

   * ignore
   
#. associated_media

   * not present in gbif occurrence.txt (next, get from verbatim.txt)
   
#. associated_references

   * gbif/dwc associatedReferences
   
#. general_comments

   * gbif/dwc eventRemarks
   
#. id

   * Calc: gbif/dwc 1) occurrenceID or 2) recordNumber 

#. provider_id

   * Calc: gbif publishingOrganizationKey from retrieved gbif dataset metadata 
   
#. resource_id

   * gbif/gbif datasetKey
   
#. provided_common_name

   * gbif/dwc vernacularName
   
#. kingdom

   * gbif/dwc kingdom is blank, resolve with ITIS calc
   
#. geodetic_datum

   * not present in GBIF occurrence.txt (AMS: next time, use from verbatim.txt)

#. coordinate_precision

   * gbif/dwc coordinatePrecision
   
#. coordinate_uncertainty

   * gbif/dwc coordinateUncertaintyInMeters
   
#. verbatim_locality

   * Calc: gbif/dwc 1) verbatimLocality 2) locality 3) habitat
   
#. mrgid

   * Calc: Point-in-polygon marine, polygon + coordinates
   
#. calculated_waterbody 

   * Calc: Point-in-polygon marine (use EEZ), polygon + coordinates
   
#. establishment_means

   * Calc: after ITIS lookup, from establishmentMeans table + itis_tsn
     (now or later? if not itis_tsn, calc from establishmentMeans table + 
     clean_provided_scientific_name)
   
#. iso_country_code

   * gbif/dwc countryCode
   
#. license

   * gbif/dc license 
   


Misc Notes:
-------------
  * Use ‘$’ delimiter in CSV output

